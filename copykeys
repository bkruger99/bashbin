#!/bin/bash
usage()
{
cat << EOF

update authorized_keys on, or copy over a public key to, a remote server

OPTIONS:
    -h      remote host
    -p      remote ssh port (defaults to 22)
    -u      remote user (defaults to $USER)
    -k      key (defaults to $HOME/.ssh/id_rsa.pub)
    -l      full path location to copy key to insted of updating authorized_keys file

EOF
exit 1
}

KEY="$HOME/.ssh/id_rsa.pub"
PORT=22
USERNAME=$USER

while getopts "p:u:h:k:l:h" option
do
  case $option in
    h) HOST=$OPTARG;;
    k) OTHER_KEY=$OPTARG;;
    p) PORT=$OPTARG;;
    u) USERNAME=$OPTARG;;
    l) LOCATION=$OPTARG;;
    h) usage;;
    *) usage;;
  esac
done

if [ -z "$HOST" ];then
  echo "fatal: missing host"
  usage
  exit 1
fi

if [ ! -z "$OTHER_KEY" ];then
  if [ ! -f "$OTHER_KEY" ];then
    echo "fatal: key not found at $KEY"
    exit 1
  fi
  if [ `stat -f '%A' "$OTHER_KEY"` -eq 600 ];then
    echo "fatal: possible non public key specified"
    exit 1
  fi
  KEY="$OTHER_KEY"
fi

AUTH=$(cat "$KEY")
if [ -z "LOCATION" ];then
  AUTH_KEYS="\$HOME/.ssh/authorized_keys"
  # command to add key to authorized_keys (only if not already present)
  CMD="mkdir -p ~/.ssh; COUNT=\`grep \"$AUTH\" $AUTH_KEYS 2> /dev/null | wc -l\`; if [ \"\$COUNT\" == \"0\" ];then echo \"$AUTH\" >> $AUTH_KEYS;fi"
else
  CMD="mkdir -p ~/.ssh;echo \"$AUTH\" >> $LOCATION;chmod 644 $LOCATION"
fi
ssh -p $PORT $USERNAME@$HOST "$CMD"
echo "$HOST updated"
